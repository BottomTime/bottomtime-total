FROM node:20.14 AS base

# RUN apk add --no-cache bash python3 make g++
RUN corepack enable

FROM base AS build

WORKDIR /app

COPY package.json yarn.lock .yarnrc.yml nx.json lerna.json ./
COPY packages/api/package.json packages/api/tsconfig.json ./packages/api/
COPY packages/common/package.json packages/common/tsconfig.json ./packages/common/
COPY packages/web/package.json packages/web/tsconfig.json packages/web/vite.config.ts packages/web/tailwind.config.js packages/web/postcss.config.js packages/web/bootstrap-docker.sh packages/web/index.html packages/web/rollup.config.mjs ./packages/web/

RUN yarn install

COPY packages/api/src/ ./packages/api/src/
COPY packages/common/src/ ./packages/common/src/

COPY packages/web/public/ ./packages/web/public/
COPY packages/web/server/ ./packages/web/server/
COPY packages/web/src/ ./packages/web/src/

RUN yarn build

FROM base AS release
COPY --from=build /app/ /app/
WORKDIR /app/packages/web/

EXPOSE 4850 24678
# HEALTHCHECK --interval=30s --timeout=30s --start-period=5s --retries=3 CMD [ "curl", "http://localhost:4850/health" ]
ENTRYPOINT ["./bootstrap-docker.sh"]
