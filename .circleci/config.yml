version: 2.1

orbs:
  aws-ecr: circleci/aws-ecr@8.2.1
  aws-s3: circleci/aws-s3@3.1.1
  node: circleci/node@5.1.0
  terraform: circleci/terraform@3.2.1

commands:
  install_node:
    parameters:
      app_path:
        type: string
    steps:
      - node/install:
          install-yarn: true
          node-version: '18'
      - node/install-packages:
          app-dir: <<parameters.app_path>>
          pkg-manager: 'yarn'

  publish_distro:
    parameters:
      bucket:
        type: string
      env:
        type: string
      path:
        type: string
    steps:
      - aws-s3/sync:
          from: <<parameters.path>>
          to: 's3://bt-$AWS_REGION-<<parameters.env>>-<<parameters.bucket>>-distro'

jobs:
  test_core:
    docker:
      - image: cimg/base:2023.04
      - image: mongo:5.0
    environment:
      JEST_JUNIT_OUTPUT_DIR: ./reports/
    steps:
      - checkout
      - install_node:
          app_path: ./service/
      - run:
          name: Lint, Build, and Test
          working_directory: ./service/
          command: |
            yarn lint
            yarn build --noEmit
            yarn test
      - store_test_results:
          path: ./service/reports/
      - store_artifacts:
          path: ./service/logs/
          destination: logs/

  test_web:
    docker:
      - image: cimg/base:2023.04
    steps:
      - checkout
      - install_node:
          app_path: ./web/
      - run:
          name: Lint, Build, and Test
          working_directory: ./web/
          command: |
            yarn lint
            yarn build
            yarn test
      - persist_to_workspace:
          root: .
          paths:
            - web/dist/

  build_docs:
    docker:
      - image: cimg/base:2023.04
    steps:
      - checkout
      - install_node:
          app_path: ./docs/
      - run:
          name: Build
          working_directory: ./docs/
          command: yarn build
      - persist_to_workspace:
          root: .
          paths:
            - docs/dist/

  migrate_database:
    docker:
      - image: cimg/base:2023.04
    steps:
      - checkout
      - install_node:
          app_path: ./service/
      - run:
          name: Migrate database
          working_directory: ./service/
          command: yarn migrate up

  deploy_core_image:
    machine:
      image: ubuntu-2004:current
    resource_class: arm.medium
    parameters:
      env:
        type: string
    steps:
      - aws-ecr/build-and-push-image:
          path: ./service
          platform: linux/arm64
          repo: 'bt/<<parameters.env>>/core'
          tag: 'latest,build$CIRCLE_BUILD_NUM'

  terraform:
    docker:
      - image: cimg/base:2023.04
    parameters:
      env:
        type: string
    steps:
      - terraform/install:
          terraform_version: '1.4.5'
      - terraform/validate:
          path: ./terraform/
      - terraform/apply:
          backend_config: 'bucket=bottomtime-tfstate,key=$AWS_REGION.<<parameters.env>>.tfstate'
          path: ./terraform/
          var_file: vars/<<parameters.env>>.tfvars

  publish_distros:
    docker:
      - image: cimg/base:2023.04
    parameters:
      env:
        type: string
    steps:
      - publish_distro:
          bucket: docs
          env: <<parameters.env>>
          path: ./docs/dist/
      - publish_distro:
          bucket: web
          env: <<parameters.env>>
          path: ./web/dist/

workflows:
  test_and_deploy:
    jobs:
      - test_core
      - test_web
      - build_docs

      # Dev environment
      - migrate_database:
          name: migrate_database_dev
          context:
            - bt-mongo-dev
          filters:
            branches:
              only:
                - circleci
          requires:
            - test_core
            - test_web

      - deploy_core_image:
          name: deploy_core_image_dev
          env: 'dev'
          context:
            - bt-aws-dev
          filters:
            branches:
              only:
                - circleci
          requires:
            - test_core
            - test_web

      - terraform:
          name: terraform_dev
          env: 'dev'
          context:
            - bt-aws-dev
          requires:
            - deploy_core_image_dev
            - migrate_database_dev

      - publish_distros:
          name: deploy_distros_dev
          env: 'dev'
          context:
            - bt-aws-dev
          requires:
            - build_docs
            - terraform_dev
