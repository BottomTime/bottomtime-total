version: 2.1
orbs:
  node: circleci/node@5.2.0

commands:
  yarn_install:
    steps:
      - checkout
      - node/install:
          install-yarn: true
          node-version: '20.14'
      - run: corepack enable
      - node/install-packages:
          pkg-manager: yarn
          check-cache: detect

jobs:
  init_and_lint:
    docker:
      - image: cimg/base:2024.06
      - image: postgis/postgis:14-3.4
        environment:
          POSTGRES_DB: postgres
          POSTGRES_USER: bt_user
          POSTGRES_PASSWORD: bt_admin1234
    resource_class: medium
    steps:
      - yarn_install
      - run:
          name: Download Code Climate coverage tool
          command: |
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter
      - save_cache:
          key: bt-{{ checksum "yarn.lock" }}
          paths:
            - node_modules
            - packages/api/node_modules
            - packages/common/node_modules
            - packages/e2e-tests/node_modules
            - packages/service/node_modules
            - packages/web/node_modules
      - run:
          name: Lint
          command: yarn lint
      - persist_to_workspace:
          root: ./
          paths:
            - cc-test-reporter

  test_api:
    docker:
      - image: cimg/base:2024.06
    resource_class: medium
    environment:
      JEST_JUNIT_OUTPUT_DIR: ./reports/
    steps:
      - yarn_install
      - attach_workspace:
          at: ./
      - run:
          name: Initialize Code Climate
          command: ./cc-test-reporter before-build
      - run:
          name: Build
          command: yarn --cwd packages/api build
      - run:
          name: Run tests
          command: yarn --cwd packages/api test --runInBand --ci
      - store_test_results:
          path: packages/api/reports/
      - run:
          name: Report test coverage
          working_directory: packages/api/
          command: |
            ../../cc-test-reporter format-coverage "coverage/lcov.info" \
              --add-prefix "packages/api/" \
              -t lcov \
              -o "../../api.coverage.json" \
      - persist_to_workspace:
          root: ./
          paths:
            - packages/api/dist/
            - packages/api/coverage/
            - api.coverage.json

  test_service:
    docker:
      - image: cimg/base:2024.06
      - image: postgis/postgis:14-3.4-alpine
        environment:
          POSTGRES_DB: postgres
          POSTGRES_USER: bt_user
          POSTGRES_PASSWORD: bt_admin1234
      - image: lphoward/fake-s3
    resource_class: medium+
    environment:
      JEST_JUNIT_OUTPUT_DIR: ./reports/
    steps:
      - yarn_install
      - attach_workspace:
          at: ./
      - run:
          name: Initialize Code Climate
          command: ./cc-test-reporter before-build
      - run:
          name: Build
          command: yarn --cwd packages/service build
      - run:
          name: Run Tests
          command: yarn --cwd packages/service test --ci
      - store_test_results:
          path: packages/service/reports/
      - run:
          name: Report test coverage
          working_directory: packages/service/
          command: |
            ../../cc-test-reporter format-coverage "coverage/lcov.info" \
              --add-prefix "packages/service/" \
              -t lcov \
              -o "../../service.coverage.json" \
      - persist_to_workspace:
          root: ./
          paths:
            - packages/service/dist/
            - packages/service/coverage/
            - service.coverage.json

  test_web:
    docker:
      - image: cimg/node:20.14-browsers
    environment:
      JEST_JUNIT_OUTPUT_DIR: ./reports/
      NODE_OPTIONS: '--max-old-space-size=8192'
    steps:
      - yarn_install
      - attach_workspace:
          at: ./
      - run:
          name: Initialize Code Climate
          command: ./cc-test-reporter before-build
      - run:
          name: Build
          command: yarn --cwd packages/web build
      - run:
          name: Run Tests
          command: yarn --cwd packages/web test --runInBand --ci
      - store_test_results:
          path: packages/web/reports/
      - run:
          name: Report test coverage
          working_directory: packages/web/
          command: |
            ../../cc-test-reporter format-coverage "coverage/lcov.info" \
              --add-prefix "packages/web/" \
              -t lcov \
              -o "../../web.coverage.json" \
      - persist_to_workspace:
          root: ./
          paths:
            - packages/web/dist/
            - packages/web/coverage/
            - web.coverage.json

  test_e2e:
    docker:
      - image: cimg/node:20.14-browsers
      - image: postgis/postgis:14-3.4
        environment:
          POSTGRES_DB: postgres
          POSTGRES_USER: bt_user
          POSTGRES_PASSWORD: bt_admin1234
    environment:
      BT_MONGO_URI: mongodb://localhost:27017/ci
      JEST_JUNIT_OUTPUT_DIR: ./reports/
    steps:
      - yarn_install
      - attach_workspace:
          at: ./
      - run:
          name: Run end-to-end tests
          working_directory: packages/e2e-tests/
          command: yarn test
      - store_test_results:
          path: ./packages/e2e-tests/test-results/

  report_coverage:
    docker:
      - image: cimg/node:20.14
    resource_class: medium
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Initialize Code Climate
          command: ./cc-test-reporter before-build
      - run:
          name: Report coverage
          command: |
            ./cc-test-reporter sum-coverage -o codeclimate.json -p 3 *.coverage.json
            ./cc-test-reporter upload-coverage -i codeclimate.json

workflows:
  test_and_deploy:
    jobs:
      # Validate
      - init_and_lint

      - test_api:
          requires:
            - init_and_lint
      - test_service:
          requires:
            - init_and_lint
          context:
            - bt-aws-dev
            - bt-smtp-dev
      - test_web:
          requires:
            - init_and_lint
      - test_e2e:
          requires:
            - init_and_lint
          context:
            - bt-aws-dev
            - bt-smtp-dev

      - report_coverage:
          requires:
            - test_api
            - test_service
            - test_web
