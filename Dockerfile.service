FROM node:20.14 AS base

# RUN apk add --no-cache bash python3 make g++ gcc libgcc libstdc++ git linux-headers fts-dev
RUN corepack enable

FROM base AS build

WORKDIR /app

COPY package.json yarn.lock .yarnrc.yml nx.json lerna.json ./
COPY packages/service/package.json packages/service/tsconfig.json ./packages/service/
COPY packages/api/package.json packages/api/tsconfig.json ./packages/api/
COPY packages/templates/package.json packages/templates/config.js packages/templates/config.production.js packages/templates/tailwind.config.js ./packages/templates/

RUN yarn install

COPY packages/service/bootstrap-docker.sh packages/service/swaggerDefinition.cjs packages/service/data-source.ts packages/service/webpack.config.js ./packages/service/
COPY packages/service/admin/ ./packages/service/admin/
COPY packages/service/public/ ./packages/service/public/
COPY packages/service/migrations/ ./packages/service/migrations/
COPY packages/service/assets/ ./packages/service/assets/

COPY packages/api/src/ ./packages/api/src/
COPY packages/templates/src/ ./packages/templates/src/
COPY packages/service/src/ ./packages/service/src/

RUN yarn build && yarn --cwd packages/service docs

FROM base AS release
COPY --from=build /app/ /app/
WORKDIR /app/packages/service/

EXPOSE 4800
HEALTHCHECK --interval=30s --timeout=30s --start-period=5s --retries=3 CMD [ "curl", "-f", "http://localhost:4800/health", "||", "exit", "1" ]
ENTRYPOINT ["./bootstrap-docker.sh"]
