services:
  # LocalStack (https://www.localstack.cloud/) to emulate AWS services
  localstack:
    container_name: bottomtime-localstack
    image: localstack/localstack
    ports:
      - '127.0.0.1:4566:4566' # LocalStack Gateway
      - '127.0.0.1:4510-4559:4510-4559' # external services port range
    environment:
      # LocalStack configuration: https://docs.localstack.cloud/references/configuration/
      - DEBUG=${DEBUG:-0}
      - SERVICES=s3,sqs,ses
    volumes:
      - './init-localstack.sh:/etc/localstack/init/ready.d/init-localstack.sh'
      - './.localstack:/var/lib/localstack'
      - '/var/run/docker.sock:/var/run/docker.sock'

  # Postfix SMTP server to act as an email relay
  postfix:
    container_name: bottomtime-postfix
    build:
      context: ./
      dockerfile: Dockerfile.postfix
    ports:
      - '25:25'
      - '465:465'
      - '587:587'

  # Postgres SQL database
  postgres:
    container_name: bottomtime-postgres
    image: postgis/postgis:14-3.4-alpine
    restart: always
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=bt_user
      - POSTGRES_PASSWORD=bt_admin1234
    ports:
      - '5432:5432'
    volumes:
      - ./.postgresql/:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', "sh -c 'pg_isready -U bt_user -d postgres'"]
      interval: 5s
      timeout: 3s
      retries: 3

  # Bottom Time backend service
  service:
    container_name: bottomtime-service
    build:
      context: ./
      dockerfile: Dockerfile.service
    ports:
      - '4800:4800'
      - '9230:9230'
    env_file:
      - packages/service/.env
    environment:
      - BT_AWS_S3_ENDPOINT=http://localstack:4566/
      - BT_AWS_SQS_EMAIL_QUEUE_URL=http://localstack:4566/000000000000/email
      - BT_AWS_SQS_ENDPOINT=http://localstack:4566/
      - BT_POSTGRES_URI=postgresql://bt_user:bt_admin1234@postgres:5432/bottomtime_local
    entrypoint: /app/packages/service/bootstrap-docker.sh
    command: []
    working_dir: /app/packages/service
    depends_on:
      localstack:
        condition: service_started
      postgres:
        condition: service_healthy
    develop:
      watch:
        - action: rebuild
          path: packages/service/yarn.lock
          target: /app/packages/service/yarn.lock
        - action: rebuild
          path: packages/api/src
          target: /app/packages/api/src
        - action: rebuild
          path: packages/common/src
          target: /app/packages/common/src
        - action: sync
          path: packages/service/src
          target: /app/packages/service/src

  # Containerized web front-end
  web:
    container_name: bottomtime-web
    build:
      context: ./
      dockerfile: Dockerfile.web
    ports:
      - '4850:4850'
      - '9231:9231'
      - '24678:24678'
    env_file:
      - packages/web/.env
    environment:
      - BTWEB_API_URL=http://bottomtime-service:4800/
    working_dir: /app/packages/web
    depends_on:
      service:
        condition: service_started
    develop:
      watch:
        - action: rebuild
          path: packages/web/yarn.lock
          target: /app/packages/web/yarn.lock
        - action: rebuild
          path: packages/api/src
          target: /app/packages/api/src
        - action: sync
          path: packages/web/public
          target: /app/packages/web/public
        - action: sync
          path: packages/web/src
          target: /app/packages/web/src

  # API documentation
  docs:
    container_name: bottomtime-docs
    build:
      context: ./
      dockerfile: Dockerfile.docs
    ports:
      - '4890:80'
    expose:
      - '4890'
    develop:
      watch:
        - action: sync+restart
          path: packages/service/docs/swagger.json
          target: /usr/share/nginx/html
